<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="tabPageSourceImage.Text" xml:space="preserve">
    <value>Source image</value>
  </data>
  <data name="buttonLoad.Text" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="buttonLoad.ToolTip" xml:space="preserve">
    <value>Load the image to be converted into a template</value>
  </data>
  <data name="ribbonPanelImage.Text" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="buttonRotateCCW.Text" xml:space="preserve">
    <value>Turn left</value>
  </data>
  <data name="buttonRotateCCW.ToolTip" xml:space="preserve">
    <value>Turn image counterclockwise</value>
  </data>
  <data name="buttonRotateCW.Text" xml:space="preserve">
    <value>Turn right</value>
  </data>
  <data name="buttonRotateCW.ToolTip" xml:space="preserve">
    <value>Turn image clockwise</value>
  </data>
  <data name="buttonFlipH.Text" xml:space="preserve">
    <value>Flip horizontal</value>
  </data>
  <data name="buttonFlipH.ToolTip" xml:space="preserve">
    <value>Flip image horizontal</value>
  </data>
  <data name="buttonFlipV.Text" xml:space="preserve">
    <value>Flip vertical</value>
  </data>
  <data name="buttonFlipV.ToolTip" xml:space="preserve">
    <value>Flip image vertically</value>
  </data>
  <data name="ribbonPanelTransform.Text" xml:space="preserve">
    <value>Transformation</value>
  </data>
  <data name="buttonRect.Text" xml:space="preserve">
    <value>Rectangle</value>
  </data>
  <data name="buttonRect.ToolTip" xml:space="preserve">
    <value>Cuts image in a rectangular area</value>
  </data>
  <data name="buttonArc.Text" xml:space="preserve">
    <value>Circle</value>
  </data>
  <data name="buttonArc.ToolTip" xml:space="preserve">
    <value>Cut out elliptical / circular area</value>
  </data>
  <data name="ribbonPanelCrop.Text" xml:space="preserve">
    <value>Cropping</value>
  </data>
  <data name="ribbonTabSourceImage.Text" xml:space="preserve">
    <value>Source image</value>
  </data>
  <data name="tabPageResultImage.Text" xml:space="preserve">
    <value>Finished template</value>
  </data>
  <data name="tabPageSymbols.Text" xml:space="preserve">
    <value>Symbols</value>
  </data>
  <data name="tabPagePreview.Text" xml:space="preserve">
    <value>Preview template</value>
  </data>
  <data name="ribbonCheckBoxSquare.Text" xml:space="preserve">
    <value>Square</value>
  </data>
  <data name="ribbonCheckBoxRound.Text" xml:space="preserve">
    <value>Round</value>
  </data>
  <data name="ribbonPanelStones.Text" xml:space="preserve">
    <value>Form</value>
  </data>
  <data name="ribbonCheckBoxStones.Text" xml:space="preserve">
    <value>Stones</value>
  </data>
  <data name="ribbonCheckBoxCM.Text" xml:space="preserve">
    <value>Cm</value>
  </data>
  <data name="ribbonLabelUnit.Text" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="upDownStitchesPerUnit.Text" xml:space="preserve">
    <value>Stones per Unit</value>
  </data>
  <data name="upDownStitchesPerUnit.ToolTip" xml:space="preserve">
    <value>Stones per centimeter</value>
  </data>
  <data name="upDownWidth.Text" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="upDownWidth.ToolTip" xml:space="preserve">
    <value>Templete width</value>
  </data>
  <data name="upDownHeight.Text" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="upDownHeight.ToolTip" xml:space="preserve">
    <value>Template height</value>
  </data>
  <data name="checkBoxFixAspect.Text" xml:space="preserve">
    <value>Adjust size ratio</value>
  </data>
  <data name="checkBoxFixAspect.ToolTip" xml:space="preserve">
    <value>Adjust size ratio when size is changed</value>
  </data>
  <data name="ribbonPanelSize.Text" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="comboBoxKit.Text" xml:space="preserve">
    <value>Color palette</value>
  </data>
  <data name="comboBoxKit.ToolTip" xml:space="preserve">
    <value>Color palette which is used to generate template</value>
  </data>
  <data name="upDownMaxColors.Text" xml:space="preserve">
    <value>Max. colors</value>
  </data>
  <data name="upDownMaxColors.ToolTip" xml:space="preserve">
    <value>Maximum number of colors to be used in the template. Colors actually used can be lower than this value.</value>
  </data>
  <data name="ribbonLabelTrulyCount.Text" xml:space="preserve">
    <value>Probably used colors:</value>
  </data>
  <data name="ribbonPanelColors.Text" xml:space="preserve">
    <value>Colors</value>
  </data>
  <data name="ribbonTabResultImage.Text" xml:space="preserve">
    <value>Image preview</value>
  </data>
  <data name="comboBoxResizeFilter.Text" xml:space="preserve">
    <value>Dither</value>
  </data>
  <data name="comboBoxResizeFilter.ToolTip" xml:space="preserve">
    <value>Dither filter</value>
  </data>
  <data name="upDownDither.Text" xml:space="preserve">
    <value>Dither strength</value>
  </data>
  <data name="upDownDither.ToolTip" xml:space="preserve">
    <value>Strength of the dither, which indicates how soft the color transitions are displayed.</value>
  </data>
  <data name="ribbonPanelAdvImage.Text" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="comboBoxColorsSubstitute.Text" xml:space="preserve">
    <value>Change colors</value>
  </data>
  <data name="comboBoxColorsSubstitute.ToolTip" xml:space="preserve">
    <value>Color comparison and exchange</value>
  </data>
  <data name="checkBoxEnsureBlackAndWhite.Text" xml:space="preserve">
    <value>Insert black and white</value>
  </data>
  <data name="checkBoxEnsureBlackAndWhite.ToolTip" xml:space="preserve">
    <value>Make sure that black and white colors are used in a reduced color palette</value>
  </data>
  <data name="ribbonPanelAdvColor.Text" xml:space="preserve">
    <value>Colors</value>
  </data>
  <data name="ribbonTabAdvanced.Text" xml:space="preserve">
    <value>Extended</value>
  </data>
  <data name="comboBoxSymbols.Text" xml:space="preserve">
    <value>Symbols</value>
  </data>
  <data name="comboBoxSymbols.ToolTip" xml:space="preserve">
    <value>Symbol true type font in template</value>
  </data>
  <data name="labelSelectedNo.Text" xml:space="preserve">
    <value>0 of 0 selected</value>
  </data>
  <data name="checkBoxDigits.Text" xml:space="preserve">
    <value>Digits</value>
  </data>
  <data name="checkBoxDigits.ToolTip" xml:space="preserve">
    <value>Include digits</value>
  </data>
  <data name="checkBoxLetters.Text" xml:space="preserve">
    <value>Letters</value>
  </data>
  <data name="checkBoxLetters.ToolTip" xml:space="preserve">
    <value>Include letters</value>
  </data>
  <data name="checkBoxSymbols.Text" xml:space="preserve">
    <value>Symbols</value>
  </data>
  <data name="checkBoxSymbols.ToolTip" xml:space="preserve">
    <value>include Symbols</value>
  </data>
  <data name="ribbonPanelSymbols.Text" xml:space="preserve">
    <value>Symbols</value>
  </data>
  <data name="buttonRandom.Text" xml:space="preserve">
    <value>Random</value>
  </data>
  <data name="buttonRandom.ToolTip" xml:space="preserve">
    <value>Choose random symbols</value>
  </data>
  <data name="buttonClear.Text" xml:space="preserve">
    <value>Empty</value>
  </data>
  <data name="buttonClear.ToolTip" xml:space="preserve">
    <value>Empty selected area</value>
  </data>
  <data name="ribbonPanelSymbolsSelect.Text" xml:space="preserve">
    <value>Choose</value>
  </data>
  <data name="ribbonTabSymbols.Text" xml:space="preserve">
    <value>Symbols</value>
  </data>
  <data name="buttonSymbols.Text" xml:space="preserve">
    <value>Symbols</value>
  </data>
  <data name="buttonWhiteSymbols.Text" xml:space="preserve">
    <value>White symbols</value>
  </data>
  <data name="buttonColorSymbols.Text" xml:space="preserve">
    <value>Colored Symbols</value>
  </data>
  <data name="buttonHalfTone.Text" xml:space="preserve">
    <value>Half tone</value>
  </data>
  <data name="buttonFull.Text" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="buttonColors.Text" xml:space="preserve">
    <value>Colors</value>
  </data>
  <data name="buttonCross.Text" xml:space="preserve">
    <value>Stones preview</value>
  </data>
  <data name="upDownCellSize.Text" xml:space="preserve">
    <value>Zoom</value>
  </data>
  <data name="upDownCellSize.ToolTip" xml:space="preserve">
    <value>Zoom in %</value>
  </data>
  <data name="checkBoxRulers.Text" xml:space="preserve">
    <value>Rulers</value>
  </data>
  <data name="checkBoxRulers.ToolTip" xml:space="preserve">
    <value>Show rulers with coloums and row numbers</value>
  </data>
  <data name="checkBoxLines.Text" xml:space="preserve">
    <value>Lines</value>
  </data>
  <data name="checkBoxLines.ToolTip" xml:space="preserve">
    <value>Show grid</value>
  </data>
  <data name="ribbonPanelSheme.Text" xml:space="preserve">
    <value>Template</value>
  </data>
  <data name="ribbonTabPreview.Text" xml:space="preserve">
    <value>Preview template</value>
  </data>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="buttonNext.Text" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="buttonCm.ToolTip" xml:space="preserve">
    <value>Set size of template in cm</value>
  </data>
  <data name="buttonInches.ToolTip" xml:space="preserve">
    <value>Specifies the size in inches</value>
  </data>
  <data name="buttonStitches.ToolTip" xml:space="preserve">
    <value>Specifies size in stones</value>
  </data>
  <data name="comboBoxUnits.Text" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="comboBoxUnits.ToolTip" xml:space="preserve">
    <value>Unit in which the size of the template is calculated</value>
  </data>
  <data name="ribbonButtonSaveSymbols.Text" xml:space="preserve">
    <value>save Symbols</value>
  </data>
  <data name="ribbonPanel1.Text" xml:space="preserve">
    <value>Symbols</value>
  </data>
  <data name="ribbonButtonSaveSymbols.ToolTip" xml:space="preserve">
    <value>Save choosen symbols</value>
  </data>
  <data name="ribbonUpDownPlateHeight.Text" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="ribbonUpDownPlateWidth.Text" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="ribbonPanelStiftplatten.Text" xml:space="preserve">
    <value>Stickplate size</value>
  </data>
  <data name="ribbonPanelBuegelperlen.Text" xml:space="preserve">
    <value>Fuse beads</value>
  </data>
  <data name="ribbonButtonImageEdit.Text" xml:space="preserve">
    <value>Edit picture</value>
  </data>
  <data name="ribbonPanel2.Text" xml:space="preserve">
    <value>Edit picture</value>
  </data>
  <data name="ribbonLabelUsedPlates.Text" xml:space="preserve">
    <value>Count plates:</value>
  </data>
  <data name="ribbonPanelEditor.Text" xml:space="preserve">
    <value>Overlay Editor</value>
  </data>
  <data name="ribbonCheckBoxBuegelperlen.Text" xml:space="preserve">
    <value>Fuse beads</value>
  </data>
</root>