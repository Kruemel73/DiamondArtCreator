<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="QuestionSavePalettesBeforeClosing" xml:space="preserve">
    <value>Enregistrer les modifications précédentes ?</value>
  </data>
  <data name="FileSavingToExcelLabel" xml:space="preserve">
    <value>Enregistrer le modèle en tant que fichier Excel...</value>
  </data>
  <data name="FileMenuName" xml:space="preserve">
    <value>dossier</value>
  </data>
  <data name="MessagePaletteSavedTo" xml:space="preserve">
    <value>Palette de couleurs enregistrée en tant que fichier {0}</value>
  </data>
  <data name="HintHomeButtonFeedback" xml:space="preserve">
    <value>Ouvrir l'e-mail de commentaires sur le produit dans le programme de messagerie par défaut</value>
  </data>
  <data name="FileFilterPDF" xml:space="preserve">
    <value>Document PDF(*.pdf)|*.pdf</value>
  </data>
  <data name="RegoWrongInfo" xml:space="preserve">
    <value>La clé d'enregistrement ne correspond pas au nom d'utilisateur. Veuillez vérifier les deux et réessayer.</value>
  </data>
  <data name="ErrorSaveSchema" xml:space="preserve">
    <value>Erreur lors de l'enregistrement du modèle dans le fichier.</value>
  </data>
  <data name="ErrorCannotSaveFile" xml:space="preserve">
    <value>Impossible d'enregistrer dans le fichier sélectionné.</value>
  </data>
  <data name="FileFilterImage" xml:space="preserve">
    <value>{0} modèle d'image (*.{1})|*.{1}</value>
  </data>
  <data name="DialogHintAddNewThread" xml:space="preserve">
    <value>Choisissez une nouvelle couleur à ajouter à la palette de couleurs utilisée</value>
  </data>
  <data name="WizardLoadSourceImageInsteadOfScheme" xml:space="preserve">
    <value>Le modèle {0} a été créé à partir de l'image {1}. Souhaitez-vous l'utiliser à la place ?</value>
  </data>
  <data name="PrintPreviewZoomAuto" xml:space="preserve">
    <value>[Automatiquement]</value>
  </data>
  <data name="HintHomeButtonRegister" xml:space="preserve">
    <value>Ouvrir la fenêtre d'inscription</value>
  </data>
  <data name="FileFilterImages" xml:space="preserve">
    <value>Fichiers image|*.png;*.jpg;*.jpeg;*.bmp;*.gif;*.tif;*.tiff;*.dac</value>
  </data>
  <data name="ImageInfoCaption" xml:space="preserve">
    <value>paramètres du modèle</value>
  </data>
  <data name="RoundEtikett" xml:space="preserve">
    <value>Page Étiquettes rondes</value>
  </data>
  <data name="RegoCancelledRefundedInfo" xml:space="preserve">
    <value>Clé d'enregistrement invalide. Veuillez utiliser une clé différente. S'il y a une erreur, veuillez contacter le support.</value>
  </data>
  <data name="TicTacEtikett" xml:space="preserve">
    <value>Page étiquettes TicTac</value>
  </data>
  <data name="UnsavedImageDescription" xml:space="preserve">
    <value>Sans nom</value>
  </data>
  <data name="PrintPageNo" xml:space="preserve">
    <value>Page {0} sur {1}</value>
  </data>
  <data name="ErrorSavePdf" xml:space="preserve">
    <value>Erreur lors de l'exportation en tant que document PDF.</value>
  </data>
  <data name="RegoThankyou" xml:space="preserve">
    <value>Merci d'avoir enregistré Diamond Art Creator !</value>
  </data>
  <data name="FileFilterPalette" xml:space="preserve">
    <value>Palette de couleurs (*.thread)|*.thread|Fichier délimité par des virgules (*.csv)|*.csv</value>
  </data>
  <data name="LabelVersion" xml:space="preserve">
    <value>libérer {0}</value>
  </data>
  <data name="MessageNoUpdatesAvailable" xml:space="preserve">
    <value>Cette version est actuelle.</value>
  </data>
  <data name="PrintSavingToPdf" xml:space="preserve">
    <value>Enregistre au format PDF</value>
  </data>
  <data name="ErrorCheckForUpdates" xml:space="preserve">
    <value>Erreur lors de la vérification des mises à jour. Erreur : {0}</value>
  </data>
  <data name="DialogHintSelectBackgroundThread" xml:space="preserve">
    <value>Choisissez une couleur pour remplir la zone découpée</value>
  </data>
  <data name="HintOptionsReset" xml:space="preserve">
    <value>Réinitialiser tous les réglages</value>
  </data>
  <data name="WizardLoadImage" xml:space="preserve">
    <value>Charger image</value>
  </data>
  <data name="FileFilterAllPalettes" xml:space="preserve">
    <value>Tous les fichiers de palette de couleurs (*.thread, *.csv)|*.thread;*.csv</value>
  </data>
  <data name="ManagePalettes" xml:space="preserve">
    <value>Gérer les palettes de couleurs...</value>
  </data>
  <data name="QuestionSaveBeforeClosing" xml:space="preserve">
    <value>Enregistrer les modifications précédentes ?</value>
  </data>
  <data name="Deckblatt" xml:space="preserve">
    <value>Feuille de couverture</value>
  </data>
  <data name="HintHomeButtonTwitter" xml:space="preserve">
    <value>Ouvrez la page Twitter du CAD</value>
  </data>
  <data name="ErrorCannotOpenFile" xml:space="preserve">
    <value>Impossible d'ouvrir le fichier sélectionné.</value>
  </data>
  <data name="LabelsSelectedSymbolsCount" xml:space="preserve">
    <value>{0} symboles sur {1} sélectionnés</value>
  </data>
  <data name="ErrorSelectedPaletteNameAlreadyUsed" xml:space="preserve">
    <value>Nom déjà utilisé pour une autre palette de couleurs.</value>
  </data>
  <data name="QuestionDeletePalette" xml:space="preserve">
    <value>Voulez-vous vraiment supprimer la palette de couleurs ?</value>
  </data>
  <data name="FileFilterThumbnail" xml:space="preserve">
    <value>{0} image d'aperçu (*.{1})|*.{1}</value>
  </data>
  <data name="HintHomeButtonLinkedIn" xml:space="preserve">
    <value>Ouvrir la page LinkedIn du programmeur</value>
  </data>
  <data name="QuestionSaveBeforeBackToWizard" xml:space="preserve">
    <value>Enregistrer les modifications précédentes ?</value>
  </data>
  <data name="ImageInfoTooltip" xml:space="preserve">
    <value>{0}x{1} briques, {2} couleurs</value>
  </data>
  <data name="ErrorCannotDeletePaletteFile" xml:space="preserve">
    <value>Impossible de supprimer le fichier de la palette de couleurs sélectionnée.</value>
  </data>
  <data name="FileFilterExcel" xml:space="preserve">
    <value>Document Excel 2007 (*.xlsx)|*.xlsx</value>
  </data>
  <data name="FileFilterSAE" xml:space="preserve">
    <value>Modèle de créateur d'art de diamant (*.dac)|*.dac</value>
  </data>
  <data name="RegoRegisteredTo" xml:space="preserve">
    <value>Inscrit pour {0}</value>
  </data>
  <data name="CaptionDeletePalette" xml:space="preserve">
    <value>Supprimer la palette de couleurs de l'utilisateur</value>
  </data>
  <data name="FileSavingToExcel" xml:space="preserve">
    <value>Enregistrer en tant que fichier Excel</value>
  </data>
  <data name="SaeFileDescription" xml:space="preserve">
    <value>Modèle de document Diamond Art Creator</value>
  </data>
  <data name="RegoTrialDaysLeft" xml:space="preserve">
    <value>{0} jours restants pour tester le programme</value>
  </data>
  <data name="ImageInfoLabel" xml:space="preserve">
    <value>Fichier : {0}
Taille : {1}x{2} briques
Taille : {3}x{4} cm
Palette de couleurs : {5}
Couleurs : {6}</value>
  </data>
  <data name="QueryEnterNewPaletteName" xml:space="preserve">
    <value>Saisissez un nom pour la palette de couleurs :</value>
  </data>
  <data name="InfoRestartToChangeLanguage" xml:space="preserve">
    <value>Veuillez redémarrer le programme pour activer la langue sélectionnée.</value>
  </data>
  <data name="QuestionSaveBeforeReturning" xml:space="preserve">
    <value>Enregistrer les modifications précédentes ?</value>
  </data>
  <data name="LinkLabelNewVersionAvailable" xml:space="preserve">
    <value>Nouvelle version disponible...</value>
  </data>
  <data name="RegoTrialVersion" xml:space="preserve">
    <value>période d'essai</value>
  </data>
  <data name="ErrorWrongFileFormat" xml:space="preserve">
    <value>Le format de fichier n'est pas pris en charge.</value>
  </data>
  <data name="HintHomeButtonWeb" xml:space="preserve">
    <value>Ouvrir la page d'accueil DAC dans le navigateur standard</value>
  </data>
  <data name="HintHomeButtonFacebook" xml:space="preserve">
    <value>Ouvrir la page Facebook</value>
  </data>
  <data name="CreatePreview" xml:space="preserve">
    <value>L'aperçu avant impression créera</value>
  </data>
</root>