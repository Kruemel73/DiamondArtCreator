<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="QuestionSavePalettesBeforeClosing" xml:space="preserve">
    <value>Save changes?</value>
  </data>
  <data name="FileSavingToExcelLabel" xml:space="preserve">
    <value>Save preview as Excel file...</value>
  </data>
  <data name="FileMenuName" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="MessagePaletteSavedTo" xml:space="preserve">
    <value>Color palette saved as {0}</value>
  </data>
  <data name="HintHomeButtonFeedback" xml:space="preserve">
    <value>Write an Email in your standard email program</value>
  </data>
  <data name="FileFilterPDF" xml:space="preserve">
    <value>PDF Document(*.pdf)|*.pdf</value>
  </data>
  <data name="RegoWrongInfo" xml:space="preserve">
    <value>Registry key does not match username. Please check and try again.</value>
  </data>
  <data name="ErrorSaveSchema" xml:space="preserve">
    <value>Error while saving template to file.</value>
  </data>
  <data name="ErrorCannotSaveFile" xml:space="preserve">
    <value>Cannot save selected file.</value>
  </data>
  <data name="FileFilterImage" xml:space="preserve">
    <value>{0} Template image(*.{1})|*.{1}</value>
  </data>
  <data name="DialogHintAddNewThread" xml:space="preserve">
    <value>Choose a new color to add to the used color palette</value>
  </data>
  <data name="WizardLoadSourceImageInsteadOfScheme" xml:space="preserve">
    <value>Template {0} was created from image {1}. Would you like to use this instead?</value>
  </data>
  <data name="PrintPreviewZoomAuto" xml:space="preserve">
    <value>[automatic]</value>
  </data>
  <data name="HintHomeButtonRegister" xml:space="preserve">
    <value>Open registry window</value>
  </data>
  <data name="FileFilterImages" xml:space="preserve">
    <value>Image files|*.png;*.jpg;*.jpeg;*.bmp;*.gif;*.tif;*.tiff;*.dac</value>
  </data>
  <data name="ImageInfoCaption" xml:space="preserve">
    <value>Template settings</value>
  </data>
  <data name="RoundEtikett" xml:space="preserve">
    <value>Round labels page</value>
  </data>
  <data name="RegoCancelledRefundedInfo" xml:space="preserve">
    <value>Invalid registration key. Please use a different key. If there is an error, please contact support.</value>
  </data>
  <data name="TicTacEtikett" xml:space="preserve">
    <value>TicTac labels page</value>
  </data>
  <data name="UnsavedImageDescription" xml:space="preserve">
    <value>No Name</value>
  </data>
  <data name="PrintPageNo" xml:space="preserve">
    <value>Page {0} of {1}</value>
  </data>
  <data name="ErrorSavePdf" xml:space="preserve">
    <value>Error while exporting to PDF document.</value>
  </data>
  <data name="RegoThankyou" xml:space="preserve">
    <value>Thank you for registering Diamond Art Creator!</value>
  </data>
  <data name="FileFilterPalette" xml:space="preserve">
    <value>Color palette (* .thread) | * .thread | Comma-separated file (* .csv) | * .csv</value>
  </data>
  <data name="LabelVersion" xml:space="preserve">
    <value>Version {0}</value>
  </data>
  <data name="MessageNoUpdatesAvailable" xml:space="preserve">
    <value>This file is current.</value>
  </data>
  <data name="PrintSavingToPdf" xml:space="preserve">
    <value>Save as PDF</value>
  </data>
  <data name="ErrorCheckForUpdates" xml:space="preserve">
    <value>Error while checking for updates {0}</value>
  </data>
  <data name="DialogHintSelectBackgroundThread" xml:space="preserve">
    <value>Choose a color to fill the area</value>
  </data>
  <data name="HintOptionsReset" xml:space="preserve">
    <value>Reset all  settings</value>
  </data>
  <data name="WizardLoadImage" xml:space="preserve">
    <value>Load image</value>
  </data>
  <data name="FileFilterAllPalettes" xml:space="preserve">
    <value>All color palette files (*.thread, *.csv)|*.thread;*.csv</value>
  </data>
  <data name="ManagePalettes" xml:space="preserve">
    <value>Manage color palettes...</value>
  </data>
  <data name="QuestionSaveBeforeClosing" xml:space="preserve">
    <value>Save changes?</value>
  </data>
  <data name="Deckblatt" xml:space="preserve">
    <value>Cover sheet</value>
  </data>
  <data name="HintHomeButtonTwitter" xml:space="preserve">
    <value>Open Twitter page for DAC</value>
  </data>
  <data name="ErrorCannotOpenFile" xml:space="preserve">
    <value>Cannot open selected file.</value>
  </data>
  <data name="LabelsSelectedSymbolsCount" xml:space="preserve">
    <value>{0} of {1} symbols selected</value>
  </data>
  <data name="ErrorSelectedPaletteNameAlreadyUsed" xml:space="preserve">
    <value>Name already used for another color palette.</value>
  </data>
  <data name="QuestionDeletePalette" xml:space="preserve">
    <value>Do you really want to delete this color palette?</value>
  </data>
  <data name="FileFilterThumbnail" xml:space="preserve">
    <value>{0} Preview image (*.{1})|*.{1}</value>
  </data>
  <data name="HintHomeButtonLinkedIn" xml:space="preserve">
    <value>Open LinkedIn-Page</value>
  </data>
  <data name="QuestionSaveBeforeBackToWizard" xml:space="preserve">
    <value>Save changes?</value>
  </data>
  <data name="ImageInfoTooltip" xml:space="preserve">
    <value>{0}x{1} stones, {2} colors</value>
  </data>
  <data name="ErrorCannotDeletePaletteFile" xml:space="preserve">
    <value>Cannot delete selected color palette.</value>
  </data>
  <data name="FileFilterExcel" xml:space="preserve">
    <value>Excel 2007 Document (*.xlsx)|*.xlsx</value>
  </data>
  <data name="FileFilterSAE" xml:space="preserve">
    <value>Diamond Art Creator Template(*.dac)|*.dac</value>
  </data>
  <data name="RegoRegisteredTo" xml:space="preserve">
    <value>Registered for {0}</value>
  </data>
  <data name="CaptionDeletePalette" xml:space="preserve">
    <value>Delete user color palette</value>
  </data>
  <data name="FileSavingToExcel" xml:space="preserve">
    <value>Save as Excel file</value>
  </data>
  <data name="SaeFileDescription" xml:space="preserve">
    <value>Diamond Art Creator template file</value>
  </data>
  <data name="RegoTrialDaysLeft" xml:space="preserve">
    <value>{0} days left to test the programm</value>
  </data>
  <data name="ImageInfoLabel" xml:space="preserve">
    <value>File: {0}
Size: {1}x{2} Stones
Size: {3}x{4} cm
Color palette: {5}
Colors: {6}</value>
  </data>
  <data name="QueryEnterNewPaletteName" xml:space="preserve">
    <value>Set a name for color palette:</value>
  </data>
  <data name="InfoRestartToChangeLanguage" xml:space="preserve">
    <value>Please restart program to activate selected language.</value>
  </data>
  <data name="QuestionSaveBeforeReturning" xml:space="preserve">
    <value>Save changes?</value>
  </data>
  <data name="LinkLabelNewVersionAvailable" xml:space="preserve">
    <value>A new version is available...</value>
  </data>
  <data name="RegoTrialVersion" xml:space="preserve">
    <value>Test period</value>
  </data>
  <data name="ErrorWrongFileFormat" xml:space="preserve">
    <value>File format is not supported.</value>
  </data>
  <data name="HintHomeButtonWeb" xml:space="preserve">
    <value>Open homepage of DAC in your standard browser</value>
  </data>
  <data name="HintHomeButtonFacebook" xml:space="preserve">
    <value>Open Facebook page</value>
  </data>
  <data name="CreatePreview" xml:space="preserve">
    <value>Creating print preview</value>
  </data>
</root>